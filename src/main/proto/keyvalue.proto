// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.keyvalue.web";
option java_outer_classname = "KeyValueProto";
option objc_class_prefix = "HLW";

package web;

service CrudKeyValue {
  rpc set(SetRequest) returns (Reply){}
  rpc get(GetRequest) returns (Reply){}
  rpc del(DelRequest) returns (Reply){}
  rpc delVers(DelRequestVers) returns (Reply){}
  rpc testAndSet(TestAndSetRequest) returns (Reply){}
}

message Reply{
    string error = 1;
    //required VTripla v = 2;
}

message SetRequest {
  int64 k = 1;
  int64 ts = 2;
  int64 d = 3;
}

message GetRequest{
    int64 k = 1;
}

message DelRequest{
    int64 k = 1;
}

message DelRequestVers{
    int64 k = 1;
    int64 vers = 2;
}

message TestAndSetRequest{
    int64 k = 1;
    VTripla v = 2;
    int64 vers = 3;
}


message VTripla{
    int64 vers = 1;
    int64 ts = 2;
    int64 d = 3;
}

// Uma vez que não podemos importar tipos de bibliotecas,
// vamos converter o java.math.BigInteger para um array de bytes e inserir nessa mensagem para fazer a transferência pelo gRCP
// e então converter este array de volta para java.math.BigInteger no Destino
message BigInteger{
    bytes value = 1;
}
